/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                        &kp W        &kp E  &kp R  &kp T    &kp Z  &mt DE_O_UMLAUT O  &kp I      &mt DE_U_UMLAUT U  &kp P
&mt DE_A_UMLAUT DE_A_UMLAUT  &mt S DE_SZ  &kp D  &kp F  &kp G    &kp H  &kp J              &kp K      &kp L              &kp SQT
&mt LEFT_SHIFT Y             &kp X        &kp C  &kp V  &kp B    &kp N  &kp M              &kp COMMA  &kp DOT            &mt LSHFT RET
&mo 1                        &kp LCTRL                                                                &kp SPACE          &mo 2
            >;
        };

        left_layer {
            bindings = <
&kp N1   &kp N2     &kp N3    &kp N4     &kp N5       &kp N6     &kp N7        &kp N8    &kp N9    &kp N0
&kp TAB  &kp LC(S)  &kp DQT   &kp PIPE2  &kp HASH     &kp MINUS  &kp LS(LPAR)  &kp LBKT  &kp LBRC  &kp DEL
&kp ESC  &kp TILDE  &kp FSLH  &kp BSLH   &kp GRAVE    &kp MINUS  &kp LS(RPAR)  &kp LBKT  &kp RBRC  &kp BSPC
&mo 1    &kp LGUI                                                                        &kp RGUI  &mo 2
            >;
        };

        right_layer {
            bindings = <
&kp EXCL   &kp AT       &kp HASH  &kp DLLR  &kp PRCNT    &kp LS(AMPS)  &kp AMPS  &kp HOME  &kp END    &kp RPAR
&kp F1     &kp F2       &kp F3    &kp F4    &kp F5       &kp F6        &kp F7    &kp F8    &kp F9     &kp F10
&kp LSHFT  &kp KP_PLUS  &kp LBKT  &kp RBKT  &kp BSLH     &kp UNDER     &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT
&mo 3      &kp LCTRL                                                                       &kp SPACE  &mo 2
            >;
        };

        tri_layer {
            bindings = <
&kp N1      &kp N2      &kp N3      &kp N4  &kp N5    &trans  &trans     &trans        &trans      &trans
&kp F1      &kp F2      &kp F3      &kp F4  &kp F5    &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6  &kp F7    &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
&trans      &trans                                                                     &trans      &trans
            >;
        };
    };
};
